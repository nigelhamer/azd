on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master

# https://bishenderson.atlassian.net/wiki/spaces/MFS/pages/4718644/Deployment+Security
permissions:
  id-token: write
  contents: read
  



jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
      # Terraform Environment variables
      TF_LOG: INFO

      # AZD Environment variables
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      # Required for terraforom to pick up service principle auth
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}

      # Tech Debt: We should dynamically retrieve this from secrets.AZURE_CREDENTIALS rathet than storing the secrtet in to place
      # Risk1: We have increased the chance the secret is exposed
      # Risk2: ARM_CLIENT_SECRET and value in AZURE_CREDENTIALS could get out of sync
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Custom Environment variables
      SERVICE_NAME: ${{ vars.SERVICE_NAME }}

    steps:
      # - name: Extract Variables
      #   run: | 
      #     $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
      #     Write-Host "::add-mask::$($info.clientSecret)"

      #     $env:ARM_CLIENT_SECRET=$info.clientSecret
      #     Write-Host "ARM_CLIENT_SECRET=$env:ARM_CLIENT_SECRET" >> $env:GITHUB_ENV
      #   shell: pwsh

      # - name: Test
      #   run: | 
      #     echo $env:ARM_CLIENT_SECRET

      - name: Checkout
        uses: actions/checkout@v3.5.2

     # Need to do both. Azure CLI set up the context correctly for AZD
      - name: Log in with AZ CLI (Federated Credentials)
        uses: azure/login@v1
        with:
            client-id: ${{ vars.AZURE_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID }}
            subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  
      - name: 'Run Azure CLI commands'
        run: |
            az account show
            az group list
            pwd 

      # - name: Log in Azure CLI with Azure (Client Credentials)
      #   run: |
      #     $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
      #     Write-Host "::add-mask::$($info.clientSecret)"

      #     az login `
      #       --service-principal -u "$($info.clientId)" -p "$($info.clientSecret)" `
      #       --tenant "$($info.tenantId)" 
      #   shell: pwsh

      - name: Log in with AZD (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh
      
      # - name: Log in AZD with Azure (Client Credentials)
      #   run: |
      #     $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
      #     Write-Host "::add-mask::$($info.clientSecret)"

      #     azd auth login `
      #       --client-id "$($info.clientId)" `
      #       --client-secret "$($info.clientSecret)" `
      #       --tenant-id "$($info.tenantId)"
      #   shell: pwsh
          
      - name: Azure Dev Configuration
        run: azd config set alpha.terraform on 

      - name: Azure Dev Provision
        run: |
          env
          azd provision --no-prompt


      # - name: Azure Dev Deploy
      #   run: azd deploy --no-prompt
      #   env:
      #     AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      #     AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
      #     AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
